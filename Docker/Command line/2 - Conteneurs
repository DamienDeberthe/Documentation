*** CONTENEURS *** 


### Manipulation des conteneurs ###

--- Pour rechercher un conteneur :
- docker search DEBIAN-conteneur
OU
- depuis docker hub

--- Pour telecharger un conteneur : 
- docker pull DEBIAN-conteneur

--- Pour lancer un conteneur :
docker run DEBIAN-conteneur


###### La commande magique: docker ######

### Affichage ###

Pour afficher des infos sur les process et conteneurs ouverts :
docker ps

Pour afficher tous les conteneurs :
docker ps -a

Pour afficher les images OK :
docker images

Pour afficher toutes les images :
docker images -a

Pour supprimer les images "corrompues" :
rm /var/lib/docker/image/overlay2/imagedb/content/sha256/[IMAGE_ID]

Pour connaitre la table NAT :
iptables -t nat -L -n

Pour connaitre les adresses IP des conteneurs :
docker inspect [CONTENEUR] | grep IPAddress

Pour prendre la main sur un docker en ligne : 
docker exec -it [name] bash


### Gerer conteneurs ###

Pour lancer une commande dans une instance:
docker run debian echo "lol"

Pour utiliser le terminal dans un conteneur:
docker run -t -i debian

Bonus: Nommer le conteneur pour plus de faciliter:
docker [...] --name test debian

Pour mieu s'organiser dans les conteneurs, il faut utiliser les tags:
docker tag debian debian:install-nano-git
Ainsi pour retrouver ce conteneur il faudra le nommer: debian:install-nano-git


BON EXEMPLE:

docker create --tty -i -p 10001:80 --name=nginx1 nginx
docker start nginx1
docker exec -it nginx1 bash OU docker attach nginx1

Une fois que le conteneur est opérationnel, il est possible le transformer en image, afin de créer de nouveau conteneurs rapidement
docker commit [name_conteneur] [name_image]
Puis du coup créer un nouveau conteneur:
docker create --tty -i -p 10002:80 --name=nginx2 nginx
docker start nginx2


### Docker Hub ###

docker commit [conteneur] qualigaz/dev:[TAG]
docker login
docker push qualigaz/dev

### Suppression ###

Eteindre un conteneur:
docker stop [name]

Supprimer conteneurs:
docker rm [name]

Supprimer image:
docker rmi [image]


Eteindre, supprimer tous les conteneurs + supprimer toutes les images
docker ps|sed "1 d"|awk '{print $1}'|xargs docker stop
docker ps -a|sed "1 d"|awk '{print $1}'|xargs docker rm
docker images|sed "1 d"|awk '{print $3}'|sort|uniq|xargs docker rmi
